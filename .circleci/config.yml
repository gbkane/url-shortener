version: 2
jobs:
  build:
    working_directory: ~/url-shortener
    docker:
      - image: circleci/ruby:2.5.7-stretch-node-browsers
        environment:
          RAILS_ENV: test
          NODE_ENV: test
          PROTOCOL: 'http'
          HOST: 'test.host'
      - image: circleci/postgres:10.5-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: gb_test
          POSTGRES_PASSWORD: ""
          TZ: "/usr/share/zoneinfo/Etc/UTC"
    steps:
      - checkout
      - run:
          name: Update bundler
          command: gem install bundler -v 2.1.4
      - restore_cache:
          key: dependency-cache-{{ checksum "Gemfile.lock"}}
      - run:
          name: Install dependencies
          command: bundle install
      - save_cache:
          key: dependency-cache-{{ checksum "Gemfile.lock"}}
          paths: vendor/bundle
      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "yarn.lock" }}
            - yarn-cache-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Database Setup
          command: |
            mv config/database.yml.circleci config/database.yml
            bundle exec rake db:create RAILS_ENV=test
            bundle exec rake db:migrate RAILS_ENV=test
      - run:
          name: Test
          command: bundle exec rspec
      - store_artifacts:
          path: coverage
          prefix: coverage
